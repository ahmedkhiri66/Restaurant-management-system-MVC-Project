@{
    ViewData["Title"] = "Analytics Dashboard";
}

<h1>Analytics Dashboard</h1>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info">@ViewBag.Message</div>
}
else
{
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Sales by Category</h5>
                </div>
                <div class="card-body">
                    <canvas id="salesByCategoryChart" width="400" height="300"></canvas>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Sales by Hour</h5>
                </div>
                <div class="card-body">
                    <canvas id="salesByHourChart" width="400" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>Top Selling Items</h5>
                </div>
                <div class="card-body">
                    <canvas id="topItemsChart" width="400" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
    <script>
        // Sales by Category Chart
        const salesByCategoryCtx = document.getElementById('salesByCategoryChart').getContext('2d');
        const salesByCategoryChart = new Chart(salesByCategoryCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.SalesByCategoryLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.SalesByCategoryData)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'right',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `$${context.raw.toFixed(2)}`;
                            }
                        }
                    }
                }
            }
        });

        // Sales by Hour Chart
        const salesByHourCtx = document.getElementById('salesByHourChart').getContext('2d');
        const salesByHourChart = new Chart(salesByHourCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.SalesByHourLabels)),
                datasets: [{
                    label: 'Revenue ($)',
                    data: @Html.Raw(Json.Serialize(ViewBag.SalesByHourData)),
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value;
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `$${context.raw.toFixed(2)}`;
                            }
                        }
                    }
                }
            }
        });

        // Top Items Chart
        const topItemsCtx = document.getElementById('topItemsChart').getContext('2d');
        const topItemsChart = new Chart(topItemsCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.TopItemsLabels)),
                datasets: [{
                    label: 'Quantity Sold',
                    data: @Html.Raw(Json.Serialize(ViewBag.TopItemsData)),
                    backgroundColor: 'rgba(75, 192, 192, 0.7)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                indexAxis: 'y',
                scales: {
                    x: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
    }
}